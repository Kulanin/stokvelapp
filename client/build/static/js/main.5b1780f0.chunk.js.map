{"version":3,"sources":["logo.svg","components/Form.js","App.js","reportWebVitals.js","index.js"],"names":["require","Form","Button","StokvelForm","props","handleChange","event","console","log","target","name","value","localStorage","removeItem","setState","lastnameRef","React","createRef","firstnameRef","date","amount","usernameRef","passwordRef","passwordRef1","passwordRef2","profileImage","state","firstname","lastname","memberid","cell","password1","password2","parssword","username","m_UploadImage","FirstnameBorderColor","LastnameBorderColor","DateBorderColor","AmountBorderColor","MemberIdBorderColor","SuccessPaymentMessage","ErrorPaymentMessage","m_disableSubmitBtn","MemberRegistration","bind","p_InputValueObject","this","buttonText","current","focus","isNaN","undefined","password","p_Message","p_Variant","p_Show","Alert","variant","style","show","e","url","memberObject","uniqueMemberid","getItem","ValidateInputValues","formData","FormData","file","document","getElementById","fileObject","files","append","requestOptions","method","headers","body","JSON","stringify","member","fetch","data","json","Response","message","ToggleModalState","setItem","setTimeout","window","location","reload","_id","error","classPaymentForm","dataset","classRegisterForm","ClassFirstname","classLogin","styleFirstname","styleLastname","styleDate","styleAmount","styleUploadForm","className","AlertMessage","Group","controlId","Label","Control","ref","type","onChange","placeholder","id","Date","toLocaleDateString","onClick","disabled","Component","HeaderList","href","headerRef","m_LoginStatus","PersonalDetails","members","g_Firstname","g_Surname","map","index","m_Myaccount","displayTable","PfuxananiHistory","Footer","FormModal","isOpen","ModalState","PaymentTable","rows","EachMember","Total","length","i","Table","striped","bordered","hover","column","colSpan","Members","sum","Card","Img","src","ToggleMemberTable","Body","Title","Text","m_DisablePaymentBtn","CSSLoader","displayLoader","g_MemberList","g_IntervalId","App","componentDidMount","FetchDataFromTheBackEnd","SetTimeInterval","TimerConter","p_Value","displayMembersDiv","p_Member","m_count","FetchError","ClearInterval","FecthError","display","process","PORT","response","MemberListArray","p_MemberList","push","p_Function","p_Milliseconds","setInterval","clearInterval","logo","alt","rel","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.5b1780f0.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","\r\nimport Axios from 'axios';\r\nimport React from 'react';\r\nimport Alert from 'react-bootstrap/Alert'\r\nimport './Form.css'\r\nconst { Form, Button } = require(\"react-bootstrap\");\r\n\r\n//let g_fileName = \"\";\r\n\r\n/*\r\n//------------------------------------------------------------------------\r\n//Profile image send component\r\n//------------------------------------------------------------------------\r\nasync function sendProfileImage(){\r\n\r\n    let formData = new FormData();\r\n    let image = document.getElementById(\"KulaniImage\"); \r\n    //formData.append(\"profileImage\",\"C:\\Users\\Kulanin\\Pictures\\Saved Pictures\");\r\n    formData.append(\"file\",image.files[0]);\r\n    let url = \"http://127.0.0.1:5001/profileImage\";\r\n     //headers: { \"Content-Type\": \"application/json\" },\r\n    let requestOptions = {\r\n      method: \"POST\",\r\n      body: formData,\r\n      \r\n    };\r\n\r\n    console.log(image.files[0]);\r\n    let data  =  await fetch(url,requestOptions);\r\n  \r\n  \r\n    let Response = await data.json();\r\n  }\r\n  \r\n  function TestForm(props){\r\n  \r\n    return(\r\n  \r\n    <div>\r\n    <form controlId=\"basicForm\" \r\n    style={{ \"margin\": \"auto\",\"backgroundColor\":\"white\", \"border\":\"solid black 1px\",\r\n    \"height\":\"300px\",\"width\":\"50%\", \"display\":props.m_UploadImage}}\r\n >\r\n         <h3 >Upload Image</h3> <br/>\r\n          <input  type=\"file\" id=\"KulaniImage\"  placeholder=\"profileImage\" />\r\n          <button onClick={sendProfileImage} value=\"Upload\">Upload</button>\r\n          </form>\r\n  \r\n    </div>\r\n  \r\n  )\r\n  }\r\n*/\r\nclass StokvelForm extends React.Component {\r\n\r\n    constructor(props) {\r\n\r\n        super(props);\r\n\r\n        this.lastnameRef = React.createRef();\r\n        this.firstnameRef = React.createRef();\r\n        this.date = React.createRef();\r\n        this.amount = React.createRef();\r\n        this.usernameRef = React.createRef();\r\n        this.passwordRef = React.createRef();\r\n        this.passwordRef1 = React.createRef();\r\n        this.passwordRef2 = React.createRef();\r\n        this.profileImage = React.createRef();\r\n\r\n        this.state = {\r\n\r\n            firstname: \"\",\r\n            lastname: \"\",\r\n            memberid: \"\",\r\n            date: \"\",\r\n            amount: \"\",\r\n            cell: \"\",\r\n            password1: \"\",\r\n            password2: \"\",\r\n            parssword:\"\",\r\n            username: \"\",\r\n            m_UploadImage:\"\",\r\n            //below usued to manipulate form control background colors\r\n            FirstnameBorderColor: \"\",\r\n            LastnameBorderColor: \"\",\r\n            DateBorderColor: \"\",\r\n            AmountBorderColor: \"\",\r\n            MemberIdBorderColor: \"\",\r\n            //End of styled background colors\r\n            SuccessPaymentMessage: \"\",\r\n            ErrorPaymentMessage: \"\",\r\n            m_disableSubmitBtn: false,\r\n\r\n\r\n        }\r\n\r\n\r\n        this.MemberRegistration = this.MemberRegistration.bind(this);\r\n    }\r\n\r\n    ValidateInputValues(p_InputValueObject) {\r\n\r\n        if (this.props.buttonText === \"Register Now\") {\r\n\r\n            if (p_InputValueObject.firstname === \"\") {\r\n\r\n                console.log(\"Firstname cannot be empty\")\r\n               this.firstnameRef.current.focus();\r\n                this.setState({\r\n                    ErrorPaymentMessage: \"Firstname cannot be empty! \",\r\n                    FirstnameBorderColor: \"red\"\r\n                   \r\n                })\r\n\r\n               \r\n\r\n                return false;\r\n            } else if (p_InputValueObject.lastname === \"\") {\r\n\r\n                console.log(\"Lastname cannot be empty\")\r\n                this.lastnameRef.current.focus();\r\n                this.setState({\r\n                    ErrorPaymentMessage: \"Lastname cannot be empty! \",\r\n                    LastnameBorderColor:\"red\"\r\n                })\r\n\r\n                return false;\r\n            }\r\n        }\r\n\r\n\r\n        if (this.props.buttonText === \"Payment\") {\r\n\r\n            if (p_InputValueObject.date === \"\") {\r\n\r\n                console.log(\"Date cannot be empty\");\r\n                this.date.current.focus();\r\n                this.setState({\r\n                    ErrorPaymentMessage: \"Date cannot be empty! \",\r\n                    DateBorderColor:\"red\"\r\n                    \r\n                })\r\n\r\n                return false;\r\n\r\n            }else if (p_InputValueObject.amount === \"\") {\r\n\r\n                console.log(\"Amount cannot be empty\");\r\n                this.amount.current.focus();\r\n                this.setState({\r\n                    ErrorPaymentMessage: \"Amount cannot be empty! \",\r\n                    AmountBorderColor:\"red\",\r\n                })\r\n\r\n                return false;\r\n\r\n            }\r\n        }\r\n\r\n        if(p_InputValueObject.password1 != p_InputValueObject.password2){\r\n\r\n            this.passwordRef1.current.focus();\r\n            this.setState({\r\n                ErrorPaymentMessage: \"Password entered do not match!\",\r\n              \r\n            })\r\n\r\n            return false;\r\n\r\n        }\r\n\r\n\r\n        if(isNaN(p_InputValueObject.amount)){\r\n\r\n            this.passwordRef1.current.focus();\r\n            this.setState({\r\n                ErrorPaymentMessage: \"Amount can only contain numerics\",\r\n              \r\n            })\r\n\r\n            return false;\r\n\r\n        }\r\n\r\n         if (this.props.buttonText === \"Login\") {\r\n\r\n\r\n            \r\n            if (p_InputValueObject.username === \"\") {\r\n\r\n                console.log(\"Username  cannot be empty\");\r\n                this.date.current.focus();\r\n                this.setState({\r\n                    ErrorPaymentMessage: \"Username cannot be empty! \",\r\n                   \r\n                    \r\n                })\r\n\r\n                return;\r\n\r\n            }\r\n\r\n            if (p_InputValueObject.password === undefined || p_InputValueObject.password === \"\") {\r\n\r\n                console.log(\"Password cannot be empty\");\r\n                this.date.current.focus();\r\n                this.setState({\r\n                    ErrorPaymentMessage: \"Password cannot be empty! \",\r\n                   \r\n                    \r\n                })\r\n\r\n                return;\r\n\r\n            }\r\n\r\n\r\n        }\r\n\r\n\r\n        this.setState({\r\n            ErrorPaymentMessage: \"\"\r\n        })\r\n\r\n\r\n        return true;\r\n\r\n    }\r\n\r\n    //------------------------------------------------------------------\r\n    //Define an aleart function \r\n    //------------------------------------------------------------------\r\n\r\n    AlertMessage(p_Message, p_Variant, p_Show = false) {\r\n\r\n        return (\r\n\r\n            <Alert variant={p_Variant}\r\n             style={{ \"height\": 45, \"marginTop\": -20, \"transition-timming-function\":\"linear\",\"transitionDelay\":\"0.7\"}} show={p_Show}>\r\n                <p style={{ \"textAlign\": \"center\" }}>\r\n                    {p_Message}\r\n                </p>\r\n\r\n            </Alert>\r\n\r\n        )\r\n\r\n\r\n    }\r\n\r\n    async MemberRegistration(e,props) {\r\n      \r\n        \r\n\r\n        let memberObject = {};\r\n        let url = \"\";\r\n\r\n\r\n        //console.log(\"Image\" + this.state.m_UploadImage);\r\n        //console.log(\"username\" + this.state.username);\r\n\r\n        //memberObject.memberid = this.state.memberid;\r\n        memberObject.memberid = this.props.uniqueMemberid;\r\n        memberObject.firstname = this.state.firstname;\r\n        memberObject.lastname = this.state.lastname;\r\n        memberObject.cell = this.state.cell;\r\n        memberObject.date = this.state.date;\r\n        memberObject.amount = this.state.amount;\r\n        memberObject.password1 = this.state.password1;\r\n        memberObject.password2 = this.state.password2;\r\n        memberObject.username = this.state.username;\r\n        memberObject.password = this.state.password;\r\n       // memberObject.profileImage = this.state.m_UploadImage;\r\n\r\n       \r\n\r\n        if(memberObject.username === \"\"){\r\n\r\n            memberObject.username = localStorage.getItem(\"username\")\r\n        }\r\n\r\n        if( memberObject.password === undefined){\r\n\r\n            memberObject.password = localStorage.getItem(\"password\")\r\n        }\r\n\r\n        if (this.ValidateInputValues(memberObject)) {\r\n\r\n            let urlRegister = \"http://127.0.0.1:5001/insert\";\r\n            let urlPayment = \"http://127.0.0.1:5001/Payment\";\r\n            let urlLogin = \"http://127.0.0.1:5001/members/login\";\r\n\r\n            url = this.props.uniqueMemberid ? urlPayment : this.props.buttonText === \"Login\" && memberObject.username && memberObject.password  ? urlLogin : urlRegister;\r\n\r\n            let formData = new FormData();\r\n            let file = document.getElementById(\"KulaniImage2\");\r\n           \r\n            let fileObject = file.files[0];\r\n\r\n           // fileObject.originalname = localStorage.getItem(\"mySessionDataStorageId\");\r\n          \r\n        \r\n            formData.append(\"file\",fileObject);  \r\n            formData.append(\"_id\",localStorage.getItem(\"mySessionDataStorageId\"))\r\n            //formData.set(\"id\", localStorage.getItem(\"mySessionDataStorageId\"));\r\n\r\n        \r\n\r\n            console.log(this.props.m_UploadImage)\r\n            \r\n            let requestOptions = {\r\n                method: \"POST\",\r\n                headers: !this.props.m_UploadImage === \"block\"  ? \"\" : { \"Content-Type\": \"application/json\" },\r\n                body: this.props.m_UploadImage  === \"block\" ? formData : JSON.stringify({member: memberObject}),\r\n                 \r\n             \r\n            };\r\n\r\n          \r\n            \r\n\r\n\r\n            try {\r\n\r\n                if(this.props.m_UploadImage  === \"block\"){\r\n\r\n                    delete requestOptions.headers;\r\n                    url = \"http://127.0.0.1:5001/profileImage\";\r\n                    \r\n                    \r\n                   \r\n    \r\n                } \r\n\r\n                //let data  =  Axios.post(url,formData)\r\n\r\n                let data = await fetch(url, requestOptions);\r\n              \r\n                let Response = await data.json();\r\n\r\n                console.log(Response.data);\r\n\r\n                if (Response.data) {\r\n\r\n                    if (Response.data.message === \"You have successfully logged in\") {\r\n\r\n                        this.props.ToggleModalState(props,Response.data);\r\n                        localStorage.setItem(\"username\",memberObject.username );\r\n                        localStorage.setItem(\"password\", memberObject.password);\r\n                    }\r\n                    \r\n                    this.setState({\r\n\r\n                        SuccessPaymentMessage: Response.data.message ? Response.data.message : Response.data,\r\n                        ErrorPaymentMessage: \"\",\r\n                        m_disableSubmitBtn: true,\r\n                    })\r\n\r\n         \r\n                    setTimeout(() => {\r\n\r\n                        window.location.reload(false);\r\n                        \r\n                    }, 1500);\r\n         \r\n                    //sessionStorage.setItem(\"mySessionDataStorage\",\"Hi \" + Response.data.data.firstname + ` (that's not me)`)\r\n                    if (Response.data.message != \"Member Image successfully uploaded\"){\r\n                        localStorage.setItem(\"mySessionDataStorageFirstname\",Response.data.data.firstname);\r\n                        localStorage.setItem(\"mySessionDataStorageId\",Response.data.data._id);\r\n\r\n                    }\r\n                    \r\n                  \r\n                    return;\r\n                }\r\n                else if (Response.error) {\r\n                    this.setState({\r\n\r\n                        ErrorPaymentMessage: Response.error,\r\n                        SuccessPaymentMessage: \"\"\r\n                    })\r\n\r\n                    setTimeout(() => {\r\n\r\n                        window.location.reload(false);\r\n                        \r\n                    }, 1500);\r\n\r\n                    return;\r\n                }else if(Response.error === undefined){\r\n\r\n                    this.setState({\r\n\r\n                        ErrorPaymentMessage: \"File was not renamed properly\",\r\n                        SuccessPaymentMessage: \"\"\r\n                    })\r\n                }\r\n\r\n            }\r\n            catch (p_Error) {\r\n\r\n                console.log(\"there was error \" + p_Error)\r\n            }\r\n\r\n\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    handleChange = (event) => {\r\n\r\n        console.log(event.target.name);\r\n        console.log(event.target.value)\r\n\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n        if(name ===\"username\"){\r\n            localStorage.removeItem(\"username\") \r\n        }\r\n\r\n        if(name ===\"password\"){\r\n            localStorage.removeItem(\"password\") \r\n        }\r\n\r\n        // if(name ===\"m_UploadImage\"){\r\n            \r\n        //     const value = event.target.files;\r\n        //     //g_fileName = value;\r\n        //     this.setState({\r\n        //         m_UploadImage: value,\r\n        //     })\r\n        // }\r\n\r\n\r\n      \r\n\r\n        this.setState({ [name]: value,\r\n        \r\n            FirstnameBorderColor:\"\",\r\n            LastnameBorderColor:\"\",\r\n            AmountBorderColor:\"\",\r\n            DateBorderColor:\"\",\r\n            ErrorPaymentMessage: \"\"\r\n        })\r\n\r\n    }\r\n\r\n \r\n\r\n\r\n\r\n    render() {\r\n\r\n        console.log(\"Kulani upload form\", this.props.m_UploadImage)\r\n\r\n        const classPaymentForm = {\r\n\r\n            \"display\": this.props.dataset ? this.props.classPaymentForm : \"block\",\r\n            \"marginTop\": 10,\r\n\r\n        }\r\n\r\n        const classRegisterForm = {\r\n\r\n            \"display\": this.props.dataset ? this.props.classRegisterForm : \"block\",\r\n            \"marginTop\": 10\r\n\r\n        }\r\n\r\n        //-----------------------------------------------------------------------\r\n        const ClassFirstname = {\r\n\r\n            \"display\": this.props.dataset ? this.props.classRegisterForm : \"block\",\r\n            \"marginTop\": 10,\r\n\r\n        }\r\n\r\n\r\n            //-----------------------------------------------------------------------\r\n            const classLogin = {\r\n\r\n                \"display\": this.props.dataset ? this.props.classLogin : \"block\",\r\n                \"marginTop\": 10,\r\n    \r\n            }\r\n         //-----------------------------------------------------------------------\r\n         const styleFirstname = {\r\n\r\n            \"display\": this.props.dataset ? this.props.classRegisterForm : \"block\",\r\n            \"marginTop\": 10,\r\n            \"borderColor\":this.state.FirstnameBorderColor\r\n\r\n        }\r\n\r\n\r\n        const styleLastname = {\r\n\r\n            \"display\": this.props.dataset ? this.props.classRegisterForm : \"block\",\r\n            \"marginTop\": 10,\r\n            \"borderColor\":this.state.LastnameBorderColor\r\n            \r\n\r\n        }\r\n\r\n        const styleCell = {\r\n\r\n            \"display\": this.props.dataset ? this.props.classRegisterForm : \"block\",\r\n            \"marginTop\": 10\r\n\r\n        }\r\n\r\n        const styleDate = {\r\n\r\n            \"display\": this.props.dataset ? this.props.classPaymentForm : \"block\",\r\n            \"marginTop\": 10,\r\n            \"borderColor\":this.state.DateBorderColor\r\n\r\n        }\r\n\r\n        const styleAmount = {\r\n\r\n            \"display\": this.props.dataset ? this.props.classPaymentForm : \"block\",\r\n            \"marginTop\": 10,\r\n            \"borderColor\":this.state.AmountBorderColor\r\n            \r\n\r\n        }\r\n\r\n        const styleMemberId = {\r\n\r\n            \"display\": this.props.dataset ? this.props.classPaymentForm : \"block\",\r\n            \"marginTop\": 10\r\n\r\n        }\r\n\r\n        const styleUploadForm = {\r\n\r\n            \"display\": this.props.m_UploadImage,\r\n        \r\n        }\r\n\r\n        \r\n\r\n  \r\n\r\n        console.log(\"KulanUniqueID\" + this.props.uniqueMemberid)\r\n        \r\n        console.log(\"buttonText\" + this.props.buttonText)\r\n\r\n        return (\r\n\r\n\r\n            <Form className=\"classForm\"   >\r\n            \r\n        <h2 style={{\"textAlign\":\"center\"}}>{this.state.ErrorPaymentMessage || this.state.SuccessPaymentMessage ? \"\": this.props.buttonText}</h2>\r\n              <div>{this.AlertMessage(this.state.ErrorPaymentMessage ? this.state.ErrorPaymentMessage : this.state.SuccessPaymentMessage, this.state.ErrorPaymentMessage ? \"danger\" : \"success\", this.state.ErrorPaymentMessage || this.state.SuccessPaymentMessage ? true : false)}</div>  \r\n                <Form.Group controlId=\"basicForm\" style={{ \"margin\": 30 }} >\r\n\r\n                    <Form.Label className={ClassFirstname} style={styleFirstname}  >Firstname</Form.Label>\r\n                    <Form.Control className={ClassFirstname} style={styleFirstname} ref={this.firstnameRef} type=\"firstname\" onChange={this.handleChange} placeholder=\"firstname\" name=\"firstname\"></Form.Control>\r\n                    \r\n                   \r\n\r\n                    <Form.Label className={classRegisterForm} style={styleLastname}>Lastname</Form.Label>\r\n                    <Form.Control className={classRegisterForm} ref={this.lastnameRef} style={styleLastname} type=\"lastname\" onChange={this.handleChange} placeholder=\"lastname\" name=\"lastname\"></Form.Control>\r\n                    \r\n                    {/** \r\n                    <Form.Label className={classRegisterForm} style={styleCell}>Cell</Form.Label>\r\n                    <Form.Control className={classRegisterForm} style={styleCell} type=\"cell\" onChange={this.handleChange} placeholder=\"cell\" name=\"cell\"></Form.Control>\r\n                    */}\r\n                    <Form.Label className={this.props.buttonText === \"Register Now\" ? classRegisterForm : classLogin} \r\n                    style={this.props.buttonText === \"Register Now\" ? classRegisterForm : classLogin}   >Username</Form.Label>\r\n                    <Form.Control className={this.props.buttonText === \"Register Now\" ? classRegisterForm : classLogin} \r\n                        style={this.props.buttonText === \"Register Now\" ? classRegisterForm : classLogin}\r\n                    ref={this.usernameRef} type=\"username\" onChange={this.handleChange} placeholder=\"username\" value={localStorage.getItem(\"username\") }  name=\"username\"></Form.Control>\r\n\r\n                    <Form.Label className={classLogin} style={classLogin}  >Password</Form.Label>\r\n                    <Form.Control className={classLogin} style={classLogin} ref={this.passwordRef} type=\"password\" onChange={this.handleChange} placeholder=\"password\" value={localStorage.getItem(\"password\")} name=\"password\"></Form.Control>\r\n\r\n                    <Form.Label className={classRegisterForm} style={styleLastname}>Password</Form.Label>\r\n                    <Form.Control className={classRegisterForm} ref={this.passwordRef1} style={styleLastname} type=\"password1\" onChange={this.handleChange} placeholder=\"password\" name=\"password1\"></Form.Control>\r\n\r\n                 \r\n                    <Form.Label className={classRegisterForm} style={styleLastname}>Retype Password</Form.Label>\r\n                    <Form.Control className={classRegisterForm} ref={this.passwordRef2} style={styleLastname} type=\"password2\" onChange={this.handleChange} placeholder=\"password\" name=\"password2\"></Form.Control>\r\n\r\n                    \r\n                    {/*<Form.Label className={styleUploadForm} style={styleUploadForm}>Upload Image</Form.Label>*/}\r\n                   <Form.Control className={styleUploadForm} ref={this.profileImage} id=\"KulaniImage2\" style={styleUploadForm} type=\"file\" onChange={this.handleChange} placeholder=\"profileImage\" name=\"file\"></Form.Control>\r\n                   <Form.Control className={styleUploadForm}  id=\"KulaniImage3\" style={styleUploadForm} type=\"hidden\" onChange={this.handleChange} placeholder=\"profileImage\" name=\"_id\"></Form.Control>\r\n                    \r\n\r\n                    <Form.Label className={classPaymentForm} style={styleDate}  >Date</Form.Label>\r\n                    <Form.Control className={classPaymentForm} ref={this.date} style={styleDate} type=\"date\" onChange={this.handleChange} placeholder={new Date().toLocaleDateString()} name=\"date\" ></Form.Control>\r\n                    <Form.Label className={classPaymentForm}  style={styleAmount}  >Amount</Form.Label>\r\n                    <Form.Control className={classPaymentForm} ref={this.amount} style={styleAmount} type=\"amount\" onChange={this.handleChange} placeholder=\"R500.00\" name=\"amount\"></Form.Control>\r\n                    \r\n                    \r\n                    {/*<Form.Label className={classPaymentForm} style={styleMemberId}   >Amount ID</Form.Label>\r\n                    <Form.Control className={classPaymentForm} style={styleMemberId} type=\"memberid\" onChange={this.handleChange} disabled=\"disabled\" value={this.props.uniqueMemberid} name=\"memberid\"></Form.Control>\r\n                    */}\r\n                    {/**   <Form.Text className=\"text-Muted\">Just testing </Form.Text>*/}\r\n\r\n                    <Button variant={this.props.buttonText === \"Upload Image\" ? \"danger\" :\"primary\"} style={{ \"marginRight\": 15, \"marginBottom\": 50, \"marginTop\": 20 }}\r\n                     onClick={(e) => this.MemberRegistration(e)}\r\n                     disabled={this.state.m_disableSubmitBtn}\r\n                     \r\n                     >{this.props.buttonText}\r\n                    \r\n                     </Button>\r\n                    <Button variant=\"primary\" style={{ \"marginBottom\": 50, \"marginTop\": 20 }} onClick={(props) => {this.props.ToggleModalState(props,\"Cancel\")}}>Cancel</Button> <br />\r\n\r\n                </Form.Group>\r\n\r\n\r\n            </Form>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default StokvelForm","import React, { Component } from \"react\"\nimport Axios from 'axios';\nimport logo from './logo.svg';\nimport './App.css';\nimport { Button } from 'react-bootstrap';\nimport Card from 'react-bootstrap/Card';\nimport Modal from 'react-modal'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport StokvelForm from \"./components/Form\"\nimport Table from 'react-bootstrap/Table'\nimport { createBrowserHistory } from 'history';\nconst { Form,  } = require(\"react-bootstrap\");\n\n\n\n\n\n//------------------------------------------------------------------------\n//Header List #Login Register myAccount\n//------------------------------------------------------------------------\n\n\n\n\nfunction HeaderList(props) {\n\n  console.log(props.ToggleModalState);\n\n  return (\n\n    <div className=\"classHeaderList\">\n      <ul>\n        {<li ><a href=\"#\" ref={props.headerRef} onClick={() => props.ToggleModalState(props, \"logout\")}>\n        </a>{localStorage.getItem(\"mySessionDataStorageFirstname\")}</li>}\n        <li ><a style={{ \"color\": localStorage.getItem(\"mySessionDataStorageFirstname\") ? \"red\" : \"\" }}\n          href=\"#\" onClick={() => {\n            !localStorage.getItem(\"mySessionDataStorageFirstname\") ?\n            props.ToggleModalState(props, \"login\") : props.ToggleModalState(props, \"logout\")\n          }} >\n          {!localStorage.getItem(\"mySessionDataStorageFirstname\") ? \"Login\" : \"Logout\"}\n        </a>\n        </li>\n        <li style={{ \"display\": localStorage.getItem(\"mySessionDataStorageFirstname\") ? \"none\" : \"block\" }} ><a href=\"#\" onClick={() => props.ToggleModalState(props, \"register\")} >{props.m_LoginStatus ? \"\" : \"Register\"}</a></li>\n        <li ><a href=\"#\" onClick={() => props.ToggleModalState(props, \"Myaccount\")} >{localStorage.getItem(\"mySessionDataStorageFirstname\") ? \"My Account\" : \"\"}</a></li>\n       {/*  <li ><a href=\"#\" onClick={() => props.ToggleModalState(props, \"UploadImaged\")} >Upload Imaged</a></li>*/}\n      </ul>\n    </div>\n  )\n}\n\n//------------------------------------------------------------------------\n//History Component\n//------------------------------------------------------------------------\n\n//------------------------------------------------------------------------\n//Personal Details Component\n//------------------------------------------------------------------------\nfunction PersonalDetails(props) {\n\n  const members = props.members;\n  let g_Firstname = \"\";\n  let g_Surname = \"\";\n\n  members.map((value, index) => {\n\n    if(value._id === localStorage.getItem(\"mySessionDataStorageId\")){\n\n      g_Firstname = value.firstname;\n      g_Surname = value.lastname;\n    }\n  })  \n\n  return (\n\n   \n    <div className=\"classPersonalDetails\" style={{\"display\":props.m_Myaccount}} >\n\n<h1>Personal Details</h1> \n      <div style={{ \"background\": \"#eceff5\", \"display\": \"grid\", \"gridTemplateColumns\": \"auto auto\", \"marginTop\":20 }}>\n\n        <div style={{ \"justifySelf\": \"start\", \"margin\": \"20px 20px 20px\", }}>\n          <h3>Your name</h3>\n          <p style={{ \"fontSize\": 22 }}>{g_Firstname}</p>\n        </div>\n        <Button style={{ \"width\": 200, \"height\": 50, \"margin\": \"40px 20px 20px\", \"justifySelf\": \"end\" }} onClick={()=>props.ToggleModalState(props,\"UpdateName\")} >Edit</Button>\n      </div>\n\n      <div style={{ \"background\": \"#eceff5\", \"display\": \"grid\", \"gridTemplateColumns\": \"auto auto\", \"marginTop\":20 }}>\n\n        <div style={{ \"justifySelf\": \"start\", \"margin\": \"20px 20px 20px\", }}>\n          <h3>Surname</h3>\n          <p style={{ \"fontSize\": 22 }}>{g_Surname}</p>\n        </div>\n        <Button style={{ \"width\": 200, \"height\": 50, \"margin\": \"40px 20px 20px\", \"justifySelf\": \"end\" }}>Edit</Button>\n      </div>\n      \n\n      <div style={{ \"background\": \"#eceff5\", \"display\": \"grid\", \"gridTemplateColumns\": \"auto auto\", \"marginTop\":20 }}>\n\n<div style={{ \"justifySelf\": \"start\", \"margin\": \"20px 20px 20px\", }}>\n  <h3>Upload Image</h3>\n  {/*<p style={{ \"fontSize\": 22 }}>Ngobeni</p>*/}\n</div>\n<Button style={{ \"width\": 200, \"height\": 50, \"margin\": \"40px 20px 20px\", \"justifySelf\": \"end\" }}  onClick={()=>props.ToggleModalState(props,\"UploadImaged\")} >Edit</Button>\n</div>\n\n\n\n\n      <div style={{ \"background\": \"#eceff5\", \"display\": \"grid\", \"gridTemplateColumns\": \"auto auto\", \"marginTop\":20}}>\n\n        <div style={{ \"justifySelf\": \"start\", \"margin\": \"20px 20px 20px\", }}>\n          <h3>Password</h3>\n          <p style={{ \"fontSize\": 22 }}>********</p>\n        </div>\n        <Button style={{ \"width\": 200, \"height\": 50, \"margin\": \"40px 20px 20px\", \"justifySelf\": \"end\" }}>Edit</Button>\n      </div>\n\n      <Button style={{ \"display\": props.displayTable, \"marginTop\":20 }} onClick={() => props.ToggleModalState(props, \"Back\")}>Go Back</Button>\n    {/**  <div style={{ \"background\": \"#eceff5\", \"display\": \"grid\", \"gridTemplateColumns\": \"auto auto\", }}>\n\n        <div style={{ \"justifySelf\": \"start\", \"margin\": \"20px 20px 20px\", }}>\n          <h3>Email</h3>\n          <p style={{ \"fontSize\": 22, }}>kulani29@yahoo.com</p>\n        </div>\n        <Button style={{ \"width\": 200, \"height\": 50, \"margin\": \"40px 20px 20px\", \"justifySelf\": \"end\" }}>Edit</Button>\n      </div>\n*/} \n    </div>\n\n\n  )\n}\n\n\nfunction PfuxananiHistory() {\n\n  return (\n    <div className=\"classPfuxanaiHistory\">\n      <p>The history of Pfuxanani magaza will go here. SG will have a responisibity to write for us</p>\n\n    </div>\n  )\n}\n\n//------------------------------------------------------------------------\n//Footer\n//------------------------------------------------------------------------\n\nfunction Footer() {\n\n  return (\n    <footer className=\"classFooter\">\n\n    </footer>\n  )\n}\n\n//------------------------------------------------------------------------\n//Form Modal for stokvel members\n//------------------------------------------------------------------------\n\nfunction FormModal(props) {\n\n  return (\n    <div>\n      <Modal className=\"c_FormModal\" isOpen={props.ModalState} >\n\n        <StokvelForm dataset={props.dataset}\n          classRegisterForm={props.classRegisterForm}\n          classPaymentForm={props.classPaymentForm}\n          classLogin={props.classLogin}\n          uniqueMemberid={props.uniqueMemberid}\n          buttonText={props.buttonText}\n          ModalState={props.ModalState}\n          headerRef={props.headerRef}\n          ToggleModalState={props.ToggleModalState}\n          m_LoginStatus={props.m_LoginStatus}\n          m_UploadImage={props.m_UploadImage}\n          \n\n\n        />\n\n      </Modal>\n    </div>\n  )\n}\n\nfunction PaymentTable(props) {\n\n  let rows = props.EachMember;\n  let Total = 0;\n  let length = \"\";\n\n  if (rows) {\n\n    console.log(\"Length \" + rows.amount.length);\n    length = rows.amount.length;\n\n    for (let i = 0; i < length; i++) {\n\n      console.log(\"Total \" + rows.amount[i]);\n      Total += rows.amount[i];\n    }\n\n  }\n\n  let columns = [\"Fistname\", \"Lastname\", \"#\", \"Date\", \"Amount\"];\n\n  return (\n\n    <div className=\"PaymentHistory\">\n\n\n      <div>\n        <Table striped bordered hover style={{ \"display\": props.displayTable, \"width\": \"100%\" }}>\n\n\n          <thead>\n            <tr >{columns.map((column, index) => {\n              return <th>{column}</th>\n            })}\n            </tr>\n\n          </thead>\n          <tbody>\n            <tr>\n\n              <td>{props.EachMember.firstname}</td>\n              <td>{props.EachMember.lastname}</td>\n\n              <td>{rows.amount && rows.amount.map((value, index) => {\n\n                return <div>{index}</div>\n\n              })}\n\n              </td>\n              <td>{rows.date && rows.date.map((date, index) => {\n                return <div>{date} </div>\n              })}\n              </td>\n\n              <td style={{}}>{rows.amount && rows.amount.map((amount, index) => {\n                return <div>{`R  ${amount}`}</div>\n              })}\n\n              </td>\n            </tr>\n            <tr>\n              <th colSpan=\"4\" style={{ \"textAlign\": \"right\" }}>Total</th>\n              <td style={{ \"fontWeight\": \"bold\" }}>{`R  ${Total}.00`}</td>\n            </tr>\n\n          </tbody>\n        </Table>\n\n\n\n\n      </div>\n\n      <Button style={{ \"display\": props.displayTable, }} onClick={() => props.ToggleModalState(props, \"Back\")}>Go Back</Button>\n    </div>\n  )\n\n}\n\n//------------------------------------------------------------------------\n//Compoment which displays each member information \n//------------------------------------------------------------------------\nfunction Members(props) {\n\n  const members = props.members;\n\n\n\n\n  return (\n\n    <div className=\"c_members\">\n\n      {\n        members.map((value, index) => {\n\n          let sum = 0;\n          for (let i = 0; i < value.amount.length; i++) {\n\n            sum += value.amount[i];\n          }\n\n          console.log(\"id: \" + value._id);\n          console.log(\"Session name\" + localStorage.getItem(\"mySessionDataStorageFirstname\"));\n          return <Card className=\"c_membersContainer\" style={{ \"width\": \"20rem\", \"maxWidth\": \"18rem\", \"cursor\":  localStorage.getItem(\"mySessionDataStorageId\") === value._id ? \"pointer\" :\"\"}}  >\n            <Card.Img variant=\"top\" style={{\"height\": \"20rem\"}}\n              src={`http://localhost:5001/${value._id}.jpg`}\n              onClick={localStorage.getItem(\"mySessionDataStorageId\") === value._id ? () => props.ToggleMemberTable(props, value) : \"\"}\n\n            ></Card.Img>\n            <Card.Body>\n              <Card.Title>{value.firstname} {value.lastname}</Card.Title>\n              {/*<Card.Text id={index} >Cell : {value.cell}</Card.Text> */}\n              <Card.Text id={index}>Total Contribution : {localStorage.getItem(\"mySessionDataStorageId\") === value._id ? `R ${sum} .00`  : \"\"}</Card.Text>\n            </Card.Body>\n            <Button disabled={localStorage.getItem(\"mySessionDataStorageId\") === value._id ? props.ModalState : props.m_DisablePaymentBtn} variant=\"primary\" onClick={() => props.ToggleModalState(props, value._id)}>Add Amount</Button>\n          </Card >\n\n        })\n\n      }\n\n    </div >\n  )\n\n\n}\n\n//------------------------------------------------------------------------\n//Loader Component\n//------------------------------------------------------------------------\n\nfunction CSSLoader(props) {\n\n  return (\n    <div className={props.displayLoader}></div>\n  )\n}\n\nfunction Test() {\n  console.log(\"testing\");\n}\n\n//let users = [\"Phindile\", \"Kulani\", \"Lulama\"];\nlet g_MemberList = [];\nlet g_IntervalId = \"\";\n\n\n//-----------------------------------------------------------------------\n//-----------------------------------------------------------------------\nclass App extends React.Component {\n\n  constructor(props) {\n\n    super(props);\n\n    this.headerRef = React.createRef();\n\n    this.state = {\n      display: false,\n      name: \"Kulani\",\n      ModalState: false,\n      classPaymentForm: \"none\",\n      classRegisterForm: \"none\",\n      classLogin: \"none\",\n      buttonText: \"\",\n      uniqueMemberid: \"\",\n      displayTable: \"none\",\n      EachMember: \"\",\n      displayMembersDiv: \"block\",\n      displayLoader: \"classLoader\",\n      FetchError: \"\",\n      m_count: 0,\n      m_LoginStatus: \"\",\n      m_DisablePaymentBtn: true,\n      m_Myaccount: \"none\",\n      m_UploadImage: \"none\",\n\n\n      dataset: g_MemberList\n    }\n\n  }\n  //-----------------------------------------------------------------------\n  //-----------------------------------------------------------------------\n  async FetchDataFromTheBackEnd() {\n\n    let url = \"\";\n\n    if (process.env.NODE_ENV === 'production') {\n\n      url = \"http://127.0.0.1:\" +  process.env.PORT ;\n    }else{\n\n       url =  \"http://127.0.0.1:\" + 5001;// || 5001; \n\n    }\n\n   \n\n    let memberObject = {};\n    memberObject.name = \"Kulani\";\n\n    let requestOptions = {\n      method: \"GET\",\n      headers: { \"Content-Type\": \"application/json\" },\n\n    };\n\n    try {\n\n      let data = await fetch(url, requestOptions);\n      let response = await data.json();\n\n\n      if (response) {\n\n        this.setState({\n          displayLoader: \"\"\n        })\n\n        response.data.map((data, index) => {\n          console.log(data);\n          this.MemberListArray(data);\n        })\n\n      }\n\n    }\n    catch (p_Reject) {\n\n      console.log(\"There was error when fetching data\" + p_Reject);\n    }\n\n  }\n\n  //-----------------------------------------------------------------------\n  //-----------------------------------------------------------------------\n  componentDidMount = () => {\n\n\n    console.log(\"Kulani Component did mount\");\n    this.FetchDataFromTheBackEnd();\n    if (this.state.dataset.length === 0) {\n\n      g_IntervalId = this.SetTimeInterval(this.TimerConter, 1000);\n      console.log(\"g_Intervalid 000 \" + g_IntervalId);\n    }\n\n\n  }\n\n  //-----------------------------------------------------------------------\n  //-----------------------------------------------------------------------\n  ToggleModalState = (props, p_Value = \"\") => {\n\n\n\n\n    if (p_Value.message === \"You have successfully logged in\") {\n\n      console.log(\"Kulani\" + p_Value.firstname);\n\n      this.setState({\n\n        m_LoginStatus: \"Hi \" + p_Value.firstname,\n      })\n\n\n\n      return;\n    }\n\n    switch (p_Value) {\n\n      case \"Cancel\":\n        this.setState({\n          ModalState: !this.state.ModalState,\n          classRegisterForm: \"none\",\n          classPaymentForm: \"none\",\n          classLogin: \"none\",\n          m_Myaccount: \"none\",\n          m_UploadImage: \"none\",\n          displayMembersDiv: \"block\",\n          \n        })\n\n        // window.location.reload(false);\n        this.headerRef.current.focus();\n\n        break;\n\n      case \"Back\":\n        this.setState({\n          displayMembersDiv: \"block\",\n          displayTable: \"none\",\n          classPaymentForm: \"none\",\n          m_Myaccount: \"none\",\n          m_UploadImage: \"none\",\n        })\n\n        // window.location.reload(false);\n        this.headerRef.current.focus();\n\n        break;\n\n      case \"register\":\n        this.setState({\n          ModalState: !this.state.ModalState,\n          classRegisterForm: \"block\",\n          classPaymentForm: \"none\",\n          buttonText: \"Register Now\",\n          displayTable: \"none\",\n          m_Myaccount: \"none\",\n          m_UploadImage: \"none\"\n\n        });\n        break;\n\n        case \"Myaccount\":\n          this.setState({\n            displayMembersDiv: \"none\",\n            classRegisterForm: \"none\",\n            classPaymentForm: \"none\",\n            displayTable: \"none\",\n            m_Myaccount: \"block\"\n  \n          });\n          break;\n\n          case \"UploadImaged\":\n            this.setState({\n              ModalState: !this.state.ModalState,\n              m_UploadImage: \"block\",\n               displayMembersDiv: \"block\",\n              buttonText: \"Upload Image\",\n              classRegisterForm: \"none\",\n              classPaymentForm: \"none\",\n              displayTable: \"none\",\n              m_Myaccount: \"none\",\n            \n            });\n            \n            break;\n\n      case \"login\":\n        this.setState({\n          ModalState: !this.state.ModalState,\n          classLogin: \"block\",\n          buttonText: \"Login\",\n          displayTable: \"none\",\n          m_Myaccount: \"none\",\n          m_UploadImage: \"none\",\n\n        });\n        break;\n\n\n      case \"logout\":\n        localStorage.removeItem(\"mySessionDataStorageFirstname\");\n        localStorage.removeItem(\"mySessionDataStorageId\");\n        this.setState({\n          ModalState: this.state.ModalState,\n          displayMembersDiv: \"block\",\n          m_Myaccount: \"none\",\n\n        });\n        break;\n\n        case \"UpdateName\":\n          this.setState({\n            ModalState: this.state.ModalState,\n            displayMembersDiv: \"block\",\n            buttonText: \"Update\",\n            m_Myaccount: \"none\",\n            classRegisterForm: \"none\",\n            classPaymentForm: \"none\",\n            displayTable: \"none\",\n          \n  \n          });\n          break;\n\n\n\n      default:\n\n        this.setState({\n          ModalState: true,\n          classPaymentForm: \"block\",\n          uniqueMemberid: p_Value,\n          buttonText: \"Payment\",\n          displayTable: \"none\",\n          m_Myaccount: \"none\"\n          \n        });\n        break;\n\n    }\n\n\n    // if(p_Value === \"Cancel\"){\n\n\n    //   this.setState({\n    //     ModalState: !this.state.ModalState,\n    //   })\n    //   window.location.reload(false);\n    //   this.headerRef.current.focus();\n\n    //   return;\n    // }\n\n    // console.log(\"Kulani ToggleState passed value : \" + p_Value);\n    // if (p_Value == \"register\") {\n\n    //   this.setState({\n    //     ModalState: !this.state.ModalState,\n    //     classRegisterForm: \"block\",\n    //     classPaymentForm: \"none\",\n    //     buttonText: \"Register Now\",\n    //     displayTable: \"none\"\n\n    //   });\n\n    //   return;\n    // }\n\n    // this.setState({\n    //   ModalState: true,\n    //   classPaymentForm: \"block\",\n    //   uniqueMemberid: p_Value,\n    //   buttonText: \"Submit\",\n    //   displayTable: \"none\"\n    // });\n\n  }\n  //-----------------------------------------------------------------------\n  //-----------------------------------------------------------------------\n  ToggleMemberTable = (props, p_Member) => {\n\n    this.headerRef.current.focus();\n\n    this.setState({\n\n      displayTable: !this.state.displayTable,\n      EachMember: p_Member,\n      displayMembersDiv: \"none\",\n      displayLoader: \"none\"\n\n    });\n\n\n  }\n\n  //-----------------------------------------------------------------------\n  //-----------------------------------------------------------------------\n  MemberListArray(p_MemberList) {\n\n    g_MemberList.push(p_MemberList);\n\n    this.setState({\n\n      dataset: g_MemberList\n    })\n\n    console.log(this.state.dataset)\n\n  }\n\n  //-----------------------------------------------------------------------\n  //-----------------------------------------------------------------------\n  ToggleTable() {\n\n    this.setState({\n      displayTable: \"block\",\n    })\n\n  }\n\n\n  //------------------------------------------------------------------------\n  //SetTimeout function \n  //------------------------------------------------------------------------\n  SetTimeout(p_Function, p_Milliseconds) {\n\n    setTimeout(p_Function, p_Milliseconds);\n  }\n  //------------------------------------------------------------------------\n  //SetInterval function \n  //------------------------------------------------------------------------\n  SetTimeInterval(p_Function, p_Milliseconds) {\n\n    return setInterval(p_Function, p_Milliseconds);\n  }\n\n  //------------------------------------------------------------------------\n  //ClearInterval function \n  //------------------------------------------------------------------------\n  ClearInterval(p_Function) {\n\n    clearInterval(p_Function);\n  }\n\n  TimerConter = () => {\n\n    console.log(this.state.m_count++);\n\n    const { m_count, dataset, FetchError } = this.state;\n    //if dataset length is empty we try every second to fetch the data again. \n    //If there is data from the back-end we clear the interval immediately\n    if (dataset.length === 0 && m_count <= 10) {\n\n      this.FetchDataFromTheBackEnd();\n\n    } else {\n\n      this.ClearInterval(g_IntervalId);\n    }\n\n    //After waiting for 10 seconds we stop trying and display connection error. \n    if (m_count > 10 && dataset.length === 0 && FetchError === \"\") {\n\n      this.ClearInterval(g_IntervalId);\n\n      this.setState(\n        {\n          displayLoader: \"\",\n          FecthError: \"Opss something went wrong!!!\"\n        })\n\n      //this.FetchDataFromTheBackEnd();\n      return;\n\n    }\n\n\n  }\n\n\n  render() {\n\n\n\n\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\" ToggleModalState={this.ToggleModalState} >\n\n          <HeaderList\n            ToggleModalState={this.ToggleModalState}\n            headerRef={this.headerRef}\n            m_LoginStatus={this.state.m_LoginStatus} />\n\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          <p>\n            Pfuxanani Magaza Stokvel to be released soon\n          </p>\n          <a\n            className=\"App-link\"\n            href=\"https://reactjs.org\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n\n          </a>\n        </header>\n\n\n        < CSSLoader displayLoader={this.state.displayLoader} />\n        <PersonalDetails\n\n          EachMember={this.state.EachMember}\n          ToggleModalState={this.ToggleModalState}\n          m_Myaccount={this.state.m_Myaccount}\n          members={this.state.dataset}\n          \n        />\n        <h1>{this.state.FecthError}</h1>\n\n        <div style={{ \"display\": this.state.displayMembersDiv }}  >\n          <Members members={this.state.dataset}\n            ToggleModalState={this.ToggleModalState}\n            ToggleMemberTable={this.ToggleMemberTable}\n            m_DisablePaymentBtn={this.state.m_DisablePaymentBtn}\n\n\n          />\n        </div>\n\n        <FormModal ModalState={this.state.ModalState}\n          dataset={this.state.dataset}\n          classRegisterForm={this.state.classRegisterForm}\n          classPaymentForm={this.state.classPaymentForm}\n          classLogin={this.state.classLogin}\n          uniqueMemberid={this.state.uniqueMemberid}\n          buttonText={this.state.buttonText}\n          headerRef={this.headerRef}\n          ToggleModalState={this.ToggleModalState}\n          m_LoginStatus={this.state.m_LoginStatus}\n          m_Myaccount={this.state.m_Myaccount}\n          m_UploadImage={this.state.m_UploadImage}\n          \n          \n\n\n        />\n\n        <PaymentTable displayTable={this.state.displayTable}\n\n          EachMember={this.state.EachMember}\n          ToggleModalState={this.ToggleModalState}\n\n        />\n\n\n        <PfuxananiHistory />\n\n        <Footer />\n      </div>\n\n    );\n  }\n\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
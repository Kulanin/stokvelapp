[{"D:\\dev\\kulani\\StokvelApp\\client\\src\\index.js":"1","D:\\dev\\kulani\\StokvelApp\\client\\src\\App.js":"2","D:\\dev\\kulani\\StokvelApp\\client\\src\\reportWebVitals.js":"3","D:\\dev\\kulani\\StokvelApp\\client\\src\\components\\Form.js":"4"},{"size":500,"mtime":499162500000,"results":"5","hashOfConfig":"6"},{"size":21666,"mtime":1610520286335,"results":"7","hashOfConfig":"6"},{"size":362,"mtime":499162500000,"results":"8","hashOfConfig":"6"},{"size":21258,"mtime":1610519099588,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"omovqm",{"filePath":"13","messages":"14","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"15","usedDeprecatedRules":"12"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\dev\\kulani\\StokvelApp\\client\\src\\index.js",[],["20","21"],"D:\\dev\\kulani\\StokvelApp\\client\\src\\App.js",["22","23","24","25","26","27","28","29","30","31","32","33"],"import React, { Component } from \"react\"\nimport Axios from 'axios';\nimport logo from './logo.svg';\nimport './App.css';\nimport { Button } from 'react-bootstrap';\nimport Card from 'react-bootstrap/Card';\nimport Modal from 'react-modal'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport StokvelForm from \"./components/Form\"\nimport Table from 'react-bootstrap/Table'\nimport { createBrowserHistory } from 'history';\nconst { Form,  } = require(\"react-bootstrap\");\n\n\n\n\n\n//------------------------------------------------------------------------\n//Header List #Login Register myAccount\n//------------------------------------------------------------------------\n\n\n\n\nfunction HeaderList(props) {\n\n  console.log(props.ToggleModalState);\n\n  return (\n\n    <div className=\"classHeaderList\">\n      <ul>\n        {<li ><a href=\"#\" ref={props.headerRef} onClick={() => props.ToggleModalState(props, \"logout\")}>\n        </a>{localStorage.getItem(\"mySessionDataStorageFirstname\")}</li>}\n        <li ><a style={{ \"color\": localStorage.getItem(\"mySessionDataStorageFirstname\") ? \"red\" : \"\" }}\n          href=\"#\" onClick={() => {\n            !localStorage.getItem(\"mySessionDataStorageFirstname\") ?\n            props.ToggleModalState(props, \"login\") : props.ToggleModalState(props, \"logout\")\n          }} >\n          {!localStorage.getItem(\"mySessionDataStorageFirstname\") ? \"Login\" : \"Logout\"}\n        </a>\n        </li>\n        <li style={{ \"display\": localStorage.getItem(\"mySessionDataStorageFirstname\") ? \"none\" : \"block\" }} ><a href=\"#\" onClick={() => props.ToggleModalState(props, \"register\")} >{props.m_LoginStatus ? \"\" : \"Register\"}</a></li>\n        <li ><a href=\"#\" onClick={() => props.ToggleModalState(props, \"Myaccount\")} >{localStorage.getItem(\"mySessionDataStorageFirstname\") ? \"My Account\" : \"\"}</a></li>\n       {/*  <li ><a href=\"#\" onClick={() => props.ToggleModalState(props, \"UploadImaged\")} >Upload Imaged</a></li>*/}\n      </ul>\n    </div>\n  )\n}\n\n//------------------------------------------------------------------------\n//History Component\n//------------------------------------------------------------------------\n\n//------------------------------------------------------------------------\n//Personal Details Component\n//------------------------------------------------------------------------\nfunction PersonalDetails(props) {\n\n  const members = props.members;\n  let g_Firstname = \"\";\n  let g_Surname = \"\";\n\n  members.map((value, index) => {\n\n    if(value._id === localStorage.getItem(\"mySessionDataStorageId\")){\n\n      g_Firstname = value.firstname;\n      g_Surname = value.lastname;\n    }\n  })  \n\n  return (\n\n   \n    <div className=\"classPersonalDetails\" style={{\"display\":props.m_Myaccount}} >\n\n<h1>Personal Details</h1> \n      <div style={{ \"background\": \"#eceff5\", \"display\": \"grid\", \"gridTemplateColumns\": \"auto auto\", \"marginTop\":20 }}>\n\n        <div style={{ \"justifySelf\": \"start\", \"margin\": \"20px 20px 20px\", }}>\n          <h3>Your name</h3>\n          <p style={{ \"fontSize\": 22 }}>{g_Firstname}</p>\n        </div>\n        <Button style={{ \"width\": 200, \"height\": 50, \"margin\": \"40px 20px 20px\", \"justifySelf\": \"end\" }} onClick={()=>props.ToggleModalState(props,\"UpdateName\")} >Edit</Button>\n      </div>\n\n      <div style={{ \"background\": \"#eceff5\", \"display\": \"grid\", \"gridTemplateColumns\": \"auto auto\", \"marginTop\":20 }}>\n\n        <div style={{ \"justifySelf\": \"start\", \"margin\": \"20px 20px 20px\", }}>\n          <h3>Surname</h3>\n          <p style={{ \"fontSize\": 22 }}>{g_Surname}</p>\n        </div>\n        <Button style={{ \"width\": 200, \"height\": 50, \"margin\": \"40px 20px 20px\", \"justifySelf\": \"end\" }}>Edit</Button>\n      </div>\n      \n\n      <div style={{ \"background\": \"#eceff5\", \"display\": \"grid\", \"gridTemplateColumns\": \"auto auto\", \"marginTop\":20 }}>\n\n<div style={{ \"justifySelf\": \"start\", \"margin\": \"20px 20px 20px\", }}>\n  <h3>Upload Image</h3>\n  {/*<p style={{ \"fontSize\": 22 }}>Ngobeni</p>*/}\n</div>\n<Button style={{ \"width\": 200, \"height\": 50, \"margin\": \"40px 20px 20px\", \"justifySelf\": \"end\" }}  onClick={()=>props.ToggleModalState(props,\"UploadImaged\")} >Edit</Button>\n</div>\n\n\n\n\n      <div style={{ \"background\": \"#eceff5\", \"display\": \"grid\", \"gridTemplateColumns\": \"auto auto\", \"marginTop\":20}}>\n\n        <div style={{ \"justifySelf\": \"start\", \"margin\": \"20px 20px 20px\", }}>\n          <h3>Password</h3>\n          <p style={{ \"fontSize\": 22 }}>********</p>\n        </div>\n        <Button style={{ \"width\": 200, \"height\": 50, \"margin\": \"40px 20px 20px\", \"justifySelf\": \"end\" }}>Edit</Button>\n      </div>\n\n      <Button style={{ \"display\": props.displayTable, \"marginTop\":20 }} onClick={() => props.ToggleModalState(props, \"Back\")}>Go Back</Button>\n    {/**  <div style={{ \"background\": \"#eceff5\", \"display\": \"grid\", \"gridTemplateColumns\": \"auto auto\", }}>\n\n        <div style={{ \"justifySelf\": \"start\", \"margin\": \"20px 20px 20px\", }}>\n          <h3>Email</h3>\n          <p style={{ \"fontSize\": 22, }}>kulani29@yahoo.com</p>\n        </div>\n        <Button style={{ \"width\": 200, \"height\": 50, \"margin\": \"40px 20px 20px\", \"justifySelf\": \"end\" }}>Edit</Button>\n      </div>\n*/} \n    </div>\n\n\n  )\n}\n\n\nfunction PfuxananiHistory() {\n\n  return (\n    <div className=\"classPfuxanaiHistory\">\n      <p>The history of Pfuxanani magaza will go here. SG will have a responisibity to write for us</p>\n\n    </div>\n  )\n}\n\n//------------------------------------------------------------------------\n//Footer\n//------------------------------------------------------------------------\n\nfunction Footer() {\n\n  return (\n    <footer className=\"classFooter\">\n\n    </footer>\n  )\n}\n\n//------------------------------------------------------------------------\n//Form Modal for stokvel members\n//------------------------------------------------------------------------\n\nfunction FormModal(props) {\n\n  return (\n    <div>\n      <Modal className=\"c_FormModal\" isOpen={props.ModalState} >\n\n        <StokvelForm dataset={props.dataset}\n          classRegisterForm={props.classRegisterForm}\n          classPaymentForm={props.classPaymentForm}\n          classLogin={props.classLogin}\n          uniqueMemberid={props.uniqueMemberid}\n          buttonText={props.buttonText}\n          ModalState={props.ModalState}\n          headerRef={props.headerRef}\n          ToggleModalState={props.ToggleModalState}\n          m_LoginStatus={props.m_LoginStatus}\n          m_UploadImage={props.m_UploadImage}\n          \n\n\n        />\n\n      </Modal>\n    </div>\n  )\n}\n\nfunction PaymentTable(props) {\n\n  let rows = props.EachMember;\n  let Total = 0;\n  let length = \"\";\n\n  if (rows) {\n\n    console.log(\"Length \" + rows.amount.length);\n    length = rows.amount.length;\n\n    for (let i = 0; i < length; i++) {\n\n      console.log(\"Total \" + rows.amount[i]);\n      Total += rows.amount[i];\n    }\n\n  }\n\n  let columns = [\"Fistname\", \"Lastname\", \"#\", \"Date\", \"Amount\"];\n\n  return (\n\n    <div className=\"PaymentHistory\">\n\n\n      <div>\n        <Table striped bordered hover style={{ \"display\": props.displayTable, \"width\": \"100%\" }}>\n\n\n          <thead>\n            <tr >{columns.map((column, index) => {\n              return <th>{column}</th>\n            })}\n            </tr>\n\n          </thead>\n          <tbody>\n            <tr>\n\n              <td>{props.EachMember.firstname}</td>\n              <td>{props.EachMember.lastname}</td>\n\n              <td>{rows.amount && rows.amount.map((value, index) => {\n\n                return <div>{index}</div>\n\n              })}\n\n              </td>\n              <td>{rows.date && rows.date.map((date, index) => {\n                return <div>{date} </div>\n              })}\n              </td>\n\n              <td style={{}}>{rows.amount && rows.amount.map((amount, index) => {\n                return <div>{`R  ${amount}`}</div>\n              })}\n\n              </td>\n            </tr>\n            <tr>\n              <th colSpan=\"4\" style={{ \"textAlign\": \"right\" }}>Total</th>\n              <td style={{ \"fontWeight\": \"bold\" }}>{`R  ${Total}.00`}</td>\n            </tr>\n\n          </tbody>\n        </Table>\n\n\n\n\n      </div>\n\n      <Button style={{ \"display\": props.displayTable, }} onClick={() => props.ToggleModalState(props, \"Back\")}>Go Back</Button>\n    </div>\n  )\n\n}\n\n//------------------------------------------------------------------------\n//Compoment which displays each member information \n//------------------------------------------------------------------------\nfunction Members(props) {\n\n  const members = props.members;\n\n\n\n\n  return (\n\n    <div className=\"c_members\">\n\n      {\n        members.map((value, index) => {\n\n          let sum = 0;\n          for (let i = 0; i < value.amount.length; i++) {\n\n            sum += value.amount[i];\n          }\n\n          console.log(\"id: \" + value._id);\n          console.log(\"Session name\" + localStorage.getItem(\"mySessionDataStorageFirstname\"));\n          return <Card className=\"c_membersContainer\" style={{ \"width\": \"20rem\", \"maxWidth\": \"18rem\", \"cursor\":  localStorage.getItem(\"mySessionDataStorageId\") === value._id ? \"pointer\" :\"\"}}  >\n            <Card.Img variant=\"top\" style={{\"height\": \"20rem\"}}\n              src={`http://localhost:5001/${value._id}.jpg`}\n              onClick={localStorage.getItem(\"mySessionDataStorageId\") === value._id ? () => props.ToggleMemberTable(props, value) : \"\"}\n\n            ></Card.Img>\n            <Card.Body>\n              <Card.Title>{value.firstname} {value.lastname}</Card.Title>\n              {/*<Card.Text id={index} >Cell : {value.cell}</Card.Text> */}\n              <Card.Text id={index}>Total Contribution : {localStorage.getItem(\"mySessionDataStorageId\") === value._id ? `R ${sum} .00`  : \"\"}</Card.Text>\n            </Card.Body>\n            <Button disabled={localStorage.getItem(\"mySessionDataStorageId\") === value._id ? props.ModalState : props.m_DisablePaymentBtn} variant=\"primary\" onClick={() => props.ToggleModalState(props, value._id)}>Add Amount</Button>\n          </Card >\n\n        })\n\n      }\n\n    </div >\n  )\n\n\n}\n\n//------------------------------------------------------------------------\n//Loader Component\n//------------------------------------------------------------------------\n\nfunction CSSLoader(props) {\n\n  return (\n    <div className={props.displayLoader}></div>\n  )\n}\n\nfunction Test() {\n  console.log(\"testing\");\n}\n\n//let users = [\"Phindile\", \"Kulani\", \"Lulama\"];\nlet g_MemberList = [];\nlet g_IntervalId = \"\";\n\n\n//-----------------------------------------------------------------------\n//-----------------------------------------------------------------------\nclass App extends React.Component {\n\n  constructor(props) {\n\n    super(props);\n\n    this.headerRef = React.createRef();\n\n    this.state = {\n      display: false,\n      name: \"Kulani\",\n      ModalState: false,\n      classPaymentForm: \"none\",\n      classRegisterForm: \"none\",\n      classLogin: \"none\",\n      buttonText: \"\",\n      uniqueMemberid: \"\",\n      displayTable: \"none\",\n      EachMember: \"\",\n      displayMembersDiv: \"block\",\n      displayLoader: \"classLoader\",\n      FetchError: \"\",\n      m_count: 0,\n      m_LoginStatus: \"\",\n      m_DisablePaymentBtn: true,\n      m_Myaccount: \"none\",\n      m_UploadImage: \"none\",\n\n\n      dataset: g_MemberList\n    }\n\n  }\n  //-----------------------------------------------------------------------\n  //-----------------------------------------------------------------------\n  async FetchDataFromTheBackEnd() {\n\n    let url = \"\";\n\n    if (process.env.NODE_ENV === 'production') {\n\n      url = \"http://127.0.0.1:\" +  process.env.PORT ;\n    }else{\n\n       url =  \"http://127.0.0.1:\" + 5001;// || 5001; \n\n    }\n\n   \n\n    let memberObject = {};\n    memberObject.name = \"Kulani\";\n\n    let requestOptions = {\n      method: \"GET\",\n      headers: { \"Content-Type\": \"application/json\" },\n\n    };\n\n    try {\n\n      let data = await fetch(url, requestOptions);\n      let response = await data.json();\n\n\n      if (response) {\n\n        this.setState({\n          displayLoader: \"\"\n        })\n\n        response.data.map((data, index) => {\n          console.log(data);\n          this.MemberListArray(data);\n        })\n\n      }\n\n    }\n    catch (p_Reject) {\n\n      console.log(\"There was error when fetching data\" + p_Reject);\n    }\n\n  }\n\n  //-----------------------------------------------------------------------\n  //-----------------------------------------------------------------------\n  componentDidMount = () => {\n\n\n    console.log(\"Kulani Component did mount\");\n    this.FetchDataFromTheBackEnd();\n    if (this.state.dataset.length === 0) {\n\n      g_IntervalId = this.SetTimeInterval(this.TimerConter, 1000);\n      console.log(\"g_Intervalid 000 \" + g_IntervalId);\n    }\n\n\n  }\n\n  //-----------------------------------------------------------------------\n  //-----------------------------------------------------------------------\n  ToggleModalState = (props, p_Value = \"\") => {\n\n\n\n\n    if (p_Value.message === \"You have successfully logged in\") {\n\n      console.log(\"Kulani\" + p_Value.firstname);\n\n      this.setState({\n\n        m_LoginStatus: \"Hi \" + p_Value.firstname,\n      })\n\n\n\n      return;\n    }\n\n    switch (p_Value) {\n\n      case \"Cancel\":\n        this.setState({\n          ModalState: !this.state.ModalState,\n          classRegisterForm: \"none\",\n          classPaymentForm: \"none\",\n          classLogin: \"none\",\n          m_Myaccount: \"none\",\n          m_UploadImage: \"none\",\n          displayMembersDiv: \"block\",\n          \n        })\n\n        // window.location.reload(false);\n        this.headerRef.current.focus();\n\n        break;\n\n      case \"Back\":\n        this.setState({\n          displayMembersDiv: \"block\",\n          displayTable: \"none\",\n          classPaymentForm: \"none\",\n          m_Myaccount: \"none\",\n          m_UploadImage: \"none\",\n        })\n\n        // window.location.reload(false);\n        this.headerRef.current.focus();\n\n        break;\n\n      case \"register\":\n        this.setState({\n          ModalState: !this.state.ModalState,\n          classRegisterForm: \"block\",\n          classPaymentForm: \"none\",\n          buttonText: \"Register Now\",\n          displayTable: \"none\",\n          m_Myaccount: \"none\",\n          m_UploadImage: \"none\"\n\n        });\n        break;\n\n        case \"Myaccount\":\n          this.setState({\n            displayMembersDiv: \"none\",\n            classRegisterForm: \"none\",\n            classPaymentForm: \"none\",\n            displayTable: \"none\",\n            m_Myaccount: \"block\"\n  \n          });\n          break;\n\n          case \"UploadImaged\":\n            this.setState({\n              ModalState: !this.state.ModalState,\n              m_UploadImage: \"block\",\n               displayMembersDiv: \"block\",\n              buttonText: \"Upload Image\",\n              classRegisterForm: \"none\",\n              classPaymentForm: \"none\",\n              displayTable: \"none\",\n              m_Myaccount: \"none\",\n            \n            });\n            \n            break;\n\n      case \"login\":\n        this.setState({\n          ModalState: !this.state.ModalState,\n          classLogin: \"block\",\n          buttonText: \"Login\",\n          displayTable: \"none\",\n          m_Myaccount: \"none\",\n          m_UploadImage: \"none\",\n\n        });\n        break;\n\n\n      case \"logout\":\n        localStorage.removeItem(\"mySessionDataStorageFirstname\");\n        localStorage.removeItem(\"mySessionDataStorageId\");\n        this.setState({\n          ModalState: this.state.ModalState,\n          displayMembersDiv: \"block\",\n          m_Myaccount: \"none\",\n\n        });\n        break;\n\n        case \"UpdateName\":\n          this.setState({\n            ModalState: this.state.ModalState,\n            displayMembersDiv: \"block\",\n            buttonText: \"Update\",\n            m_Myaccount: \"none\",\n            classRegisterForm: \"none\",\n            classPaymentForm: \"none\",\n            displayTable: \"none\",\n          \n  \n          });\n          break;\n\n\n\n      default:\n\n        this.setState({\n          ModalState: true,\n          classPaymentForm: \"block\",\n          uniqueMemberid: p_Value,\n          buttonText: \"Payment\",\n          displayTable: \"none\",\n          m_Myaccount: \"none\"\n          \n        });\n        break;\n\n    }\n\n\n    // if(p_Value === \"Cancel\"){\n\n\n    //   this.setState({\n    //     ModalState: !this.state.ModalState,\n    //   })\n    //   window.location.reload(false);\n    //   this.headerRef.current.focus();\n\n    //   return;\n    // }\n\n    // console.log(\"Kulani ToggleState passed value : \" + p_Value);\n    // if (p_Value == \"register\") {\n\n    //   this.setState({\n    //     ModalState: !this.state.ModalState,\n    //     classRegisterForm: \"block\",\n    //     classPaymentForm: \"none\",\n    //     buttonText: \"Register Now\",\n    //     displayTable: \"none\"\n\n    //   });\n\n    //   return;\n    // }\n\n    // this.setState({\n    //   ModalState: true,\n    //   classPaymentForm: \"block\",\n    //   uniqueMemberid: p_Value,\n    //   buttonText: \"Submit\",\n    //   displayTable: \"none\"\n    // });\n\n  }\n  //-----------------------------------------------------------------------\n  //-----------------------------------------------------------------------\n  ToggleMemberTable = (props, p_Member) => {\n\n    this.headerRef.current.focus();\n\n    this.setState({\n\n      displayTable: !this.state.displayTable,\n      EachMember: p_Member,\n      displayMembersDiv: \"none\",\n      displayLoader: \"none\"\n\n    });\n\n\n  }\n\n  //-----------------------------------------------------------------------\n  //-----------------------------------------------------------------------\n  MemberListArray(p_MemberList) {\n\n    g_MemberList.push(p_MemberList);\n\n    this.setState({\n\n      dataset: g_MemberList\n    })\n\n    console.log(this.state.dataset)\n\n  }\n\n  //-----------------------------------------------------------------------\n  //-----------------------------------------------------------------------\n  ToggleTable() {\n\n    this.setState({\n      displayTable: \"block\",\n    })\n\n  }\n\n\n  //------------------------------------------------------------------------\n  //SetTimeout function \n  //------------------------------------------------------------------------\n  SetTimeout(p_Function, p_Milliseconds) {\n\n    setTimeout(p_Function, p_Milliseconds);\n  }\n  //------------------------------------------------------------------------\n  //SetInterval function \n  //------------------------------------------------------------------------\n  SetTimeInterval(p_Function, p_Milliseconds) {\n\n    return setInterval(p_Function, p_Milliseconds);\n  }\n\n  //------------------------------------------------------------------------\n  //ClearInterval function \n  //------------------------------------------------------------------------\n  ClearInterval(p_Function) {\n\n    clearInterval(p_Function);\n  }\n\n  TimerConter = () => {\n\n    console.log(this.state.m_count++);\n\n    const { m_count, dataset, FetchError } = this.state;\n    //if dataset length is empty we try every second to fetch the data again. \n    //If there is data from the back-end we clear the interval immediately\n    if (dataset.length === 0 && m_count <= 10) {\n\n      this.FetchDataFromTheBackEnd();\n\n    } else {\n\n      this.ClearInterval(g_IntervalId);\n    }\n\n    //After waiting for 10 seconds we stop trying and display connection error. \n    if (m_count > 10 && dataset.length === 0 && FetchError === \"\") {\n\n      this.ClearInterval(g_IntervalId);\n\n      this.setState(\n        {\n          displayLoader: \"\",\n          FecthError: \"Opss something went wrong!!!\"\n        })\n\n      //this.FetchDataFromTheBackEnd();\n      return;\n\n    }\n\n\n  }\n\n\n  render() {\n\n\n\n\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\" ToggleModalState={this.ToggleModalState} >\n\n          <HeaderList\n            ToggleModalState={this.ToggleModalState}\n            headerRef={this.headerRef}\n            m_LoginStatus={this.state.m_LoginStatus} />\n\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          <p>\n            Pfuxanani Magaza Stokvel to be released soon\n          </p>\n          <a\n            className=\"App-link\"\n            href=\"https://reactjs.org\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n\n          </a>\n        </header>\n\n\n        < CSSLoader displayLoader={this.state.displayLoader} />\n        <PersonalDetails\n\n          EachMember={this.state.EachMember}\n          ToggleModalState={this.ToggleModalState}\n          m_Myaccount={this.state.m_Myaccount}\n          members={this.state.dataset}\n          \n        />\n        <h1>{this.state.FecthError}</h1>\n\n        <div style={{ \"display\": this.state.displayMembersDiv }}  >\n          <Members members={this.state.dataset}\n            ToggleModalState={this.ToggleModalState}\n            ToggleMemberTable={this.ToggleMemberTable}\n            m_DisablePaymentBtn={this.state.m_DisablePaymentBtn}\n\n\n          />\n        </div>\n\n        <FormModal ModalState={this.state.ModalState}\n          dataset={this.state.dataset}\n          classRegisterForm={this.state.classRegisterForm}\n          classPaymentForm={this.state.classPaymentForm}\n          classLogin={this.state.classLogin}\n          uniqueMemberid={this.state.uniqueMemberid}\n          buttonText={this.state.buttonText}\n          headerRef={this.headerRef}\n          ToggleModalState={this.ToggleModalState}\n          m_LoginStatus={this.state.m_LoginStatus}\n          m_Myaccount={this.state.m_Myaccount}\n          m_UploadImage={this.state.m_UploadImage}\n          \n          \n\n\n        />\n\n        <PaymentTable displayTable={this.state.displayTable}\n\n          EachMember={this.state.EachMember}\n          ToggleModalState={this.ToggleModalState}\n\n        />\n\n\n        <PfuxananiHistory />\n\n        <Footer />\n      </div>\n\n    );\n  }\n\n}\n\nexport default App;\n","D:\\dev\\kulani\\StokvelApp\\client\\src\\reportWebVitals.js",[],"D:\\dev\\kulani\\StokvelApp\\client\\src\\components\\Form.js",["34","35","36","37","38"],{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","severity":1,"message":"44","line":1,"column":17,"nodeType":"45","messageId":"46","endLine":1,"endColumn":26},{"ruleId":"43","severity":1,"message":"47","line":2,"column":8,"nodeType":"45","messageId":"46","endLine":2,"endColumn":13},{"ruleId":"43","severity":1,"message":"48","line":11,"column":10,"nodeType":"45","messageId":"46","endLine":11,"endColumn":30},{"ruleId":"43","severity":1,"message":"49","line":12,"column":9,"nodeType":"45","messageId":"46","endLine":12,"endColumn":13},{"ruleId":"50","severity":1,"message":"51","line":33,"column":15,"nodeType":"52","endLine":33,"endColumn":105},{"ruleId":"50","severity":1,"message":"51","line":35,"column":14,"nodeType":"52","endLine":39,"endColumn":15},{"ruleId":"50","severity":1,"message":"51","line":43,"column":110,"nodeType":"52","endLine":43,"endColumn":181},{"ruleId":"50","severity":1,"message":"51","line":44,"column":14,"nodeType":"52","endLine":44,"endColumn":86},{"ruleId":"53","severity":1,"message":"54","line":64,"column":30,"nodeType":"55","messageId":"56","endLine":64,"endColumn":32},{"ruleId":"43","severity":1,"message":"57","line":330,"column":10,"nodeType":"45","messageId":"46","endLine":330,"endColumn":14},{"ruleId":"53","severity":1,"message":"54","line":412,"column":41,"nodeType":"55","messageId":"56","endLine":412,"endColumn":43},{"ruleId":"58","severity":1,"message":"59","line":697,"column":17,"nodeType":"60","endLine":697,"endColumn":27},{"ruleId":"43","severity":1,"message":"47","line":2,"column":8,"nodeType":"45","messageId":"46","endLine":2,"endColumn":13},{"ruleId":"61","severity":1,"message":"62","line":160,"column":41,"nodeType":"63","messageId":"64","endLine":160,"endColumn":43},{"ruleId":"61","severity":1,"message":"62","line":367,"column":47,"nodeType":"63","messageId":"64","endLine":367,"endColumn":49},{"ruleId":"43","severity":1,"message":"65","line":506,"column":15,"nodeType":"45","messageId":"46","endLine":506,"endColumn":24},{"ruleId":"43","severity":1,"message":"66","line":530,"column":15,"nodeType":"45","messageId":"46","endLine":530,"endColumn":28},"no-native-reassign",["67"],"no-negated-in-lhs",["68"],"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","'Axios' is defined but never used.","'createBrowserHistory' is defined but never used.","'Form' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'Test' is defined but never used.","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'styleCell' is assigned a value but never used.","'styleMemberId' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]